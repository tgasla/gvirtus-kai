apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gvirtus-device-plugin
  namespace: kube-system
  labels:
    app.kubernetes.io/name: gvirtus-device-plugin
    app.kubernetes.io/component: device-plugin
    app.kubernetes.io/part-of: gvirtus
    app.kubernetes.io/version: "0.1.0-alpha"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: gvirtus-device-plugin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gvirtus-device-plugin
        app.kubernetes.io/component: device-plugin
        app.kubernetes.io/part-of: gvirtus
        app.kubernetes.io/version: "0.1.0-alpha"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gvirtus.io/frontend.allowed
                operator: In
                values:
                - "true"
              - key: nvidia.com/gpu.present
                operator: NotIn
                values:
                - "true"
      initContainers:
      - name: bootstrap-host
        image: busybox:latest
        securityContext:
          privileged: true
        command:
        - /bin/sh
        - -c
        - |
          set -eux
          # 1) Create CDI directory and write the spec
          mkdir -p /host/etc/cdi
          cat << 'EOF' > /host/etc/cdi/gvirtus-device.yaml
          cdiVersion: 0.6.0
          kind: nvidia.com/gpu
          devices:
          - name: device_0
            containerEdits:
              deviceNodes:
              - hostPath: /dev/gvirtus/device_0
                path: /dev/gvirtus/device_0
                type: c
                permissions: rw
              mounts:
              - hostPath: /opt/gvirtus/lib/device_0.so
                containerPath: /opt/gvirtus/lib/device_0.so
                options: ["ro", "nosuid", "nodev", "bind"]
          EOF

          # 2) Create the gvirtus character device
          mkdir -p /host/dev/gvirtus
          rm -f /host/dev/gvirtus/device_0
          mknod /host/dev/gvirtus/device_0 c 89 1
          chmod 666 /host/dev/gvirtus/device_0

          # 3) Create the gvirtus device .so
          mkdir -p /host/opt/gvirtus/lib
          touch /host/opt/gvirtus/lib/device_0.so
          chmod 644 /host/opt/gvirtus/lib/device_0.so
        volumeMounts:
        - name: host-root
          mountPath: /host
      containers:
      - name: gvirtus-device-plugin
        image: taslanidis/gvirtus-device-plugin:latest
        securityContext:
          privileged: true
        volumeMounts:
        - name: kubelet
          mountPath: /var/lib/kubelet
      volumes:
      - name: host-root
        hostPath:
          path: /
      - name: kubelet
        hostPath:
          path: /var/lib/kubelet
